events {
    worker_connections 1024;
}

http {
    upstream app_servers {
        least_conn;  # Используем least connections для балансировки
        server app:3000;  # Docker DNS автоматически распределит запросы между репликами
    }

    server {
        listen 80;

        location /health {
            return 200 'healthy\n';
        }

        location /metrics {
            proxy_pass http://app_servers/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Instance-ID $upstream_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 300;
            proxy_send_timeout 300;
        }

        location / {
            proxy_pass http://app_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
            proxy_buffering off;
            proxy_request_buffering off;
        }
    }
}
